cut: Cortar cadeias de caracteres
Este comando extrai campos ou pedaços de dados de arquivos, ou de qualquer entrada

Syntax: cut -ccaracteres [arquivo]

Onde caracteres é a porção que se deseja cortar de cada regsitro de arquivo

cut -cposicao arq -> Retorna todos os caracteres de posição
cut -cposini-posifim arq -> Retorna todas as cadeias entre posini e posifim
cut -cposini- arq -> Retorna todas as cadeias a partir de posini
cut -c-posfim arq -> Retorna todas as cadeias do início até posfim

Exemplos:

who | cut -c-8 -> Extrair da saída do who até o oitavo caractere
who | cut -c10-15 -> Extrair da saída do who do décimo até o décimo quinto caractere
who | cut -c32- -> Extrair da saída do who a partir do 32 caractere

---------------------------------------------------------------------------------------

-f(field) -> Serve para especificar campos(fields) que desejamos extrair, obedecendo às mesmas regras
do -c caractere:

cut -fcampo arq -> Retorna o campo campo
cut -fcampoini-campofim arq -> Retorna campos de campoini a campofim
cut -fcampoini- arq -> Retorna todos os campos a partir de campoini
cut -f-campofim arq -> Retorna todos os campos até o campofim

---------------------------------------------------------------------------------------

-d(delimitador) -> Usando essa opção, descrevemos para o cut qual será o separadorde campos do arquivo.
***É necessária a utilização de aspas ou apóstrofos nos caracteres que o Shell possa interpretar como metacaracteres***

Syntax: cut -fcampos [-ddelimitador] arquivo

Onde delimitador é o caractere que delimita todos os campos de arquivo

Ex: tail -4  /etc/passwd | cut -f1 -d: -> Extraindo da saída de tail, somente o primeiro campo

Ex: Arquivo 'telefone' foi criado com 2 campso separados por <TAB>.

cat telefones | cut -f1 -> Extrai somente o primeiro campo (Delimitador <TAB> é o padrão, por isso foi imitido)

Ex: cat telefones | cut -f1 -d" " -> Utilizando o delimitador espaço com as aspas (é um metacaracter)
Alternativo(melhor): cut -f1 -d " " telefones

Ex: cut -f2 -d"(" telefones | cut -f1 -d")"

---------------------------------------------------------------------------------------

paste -> Colando cadeias de caracteres

Junta pedaços de arquivos

Syntax: paste [arquivo1] [arquivo2] ... [arquivoN]

Cada linha de um arquivo é colada à linha da posição correspondente do outro arquivo, de maneira a formar 
linahs únicas que serão mandadas para a saída padrão

cat /etc/passwd | cut -f1 -d: > /tmp/login -> Primeiro campo (-f1) mandado para /tmp/logins
cat /etc/passwd | cut -f3 -d: > /tmp/uid -> Terceiro campo (-f3) mandado para /tmp/uid
paste /tmp/logins /tmp/uid -> Junta as linhas dos dois arquivos 

***Insere as linhas com separador <TAB>

-d -> Análogo ao cut, permitindo o uso de um delimitador (necessita aspas ou apóstrofos caso seja metacaractere)
Ex: paste -d: /tmp/logins /tmp/uid


-s -> Transforma linhas de um arquivo em colunas, separadas por <TAB>.
Ex: paste -s /tmp/logins
Ex: paste -s -d" " /tmp/logins -> Utilizar espaço como separador


---------------------------------------------------------------------------------------

tr -> Recebe dados da entrada padrão, convertendo-os mediante um padrão específicado

Syntax: tr [-opção] <dos-caracteres> <para-os-caracteres>

Onde <dos-caracteres> e <para-os-caracteres> são um ou mais caracteres. Qualquer caractere vindo de uma entrada definida, que 
coincida com um caractere de <dos-caracteres>, será convertido para o correspondente em <para-os-caracteres>, e seu resultado
é enviado para a saída

Ex: cat quequeisso | > tr a z
Ex: tr A a < quequeisso -> Versão melhor

Ex: head -10 /etc/passwd | cut -f1,6 -d: | tr : '   ' -> Separa os primeiros 10 regsitros de /etc/passwd, pega o 1 e 6 campos.
Após isso, muda o delimitador para <TAB>

[car*] - Em <para-os-caracteres>, faz cópias de car até o tamanho de <dos-caracteres>
[car*rep] - Repete rep cópias de car
[:alnum:] - Letras e dígitos
[:alpha:] - Letras
[:blank:] - Espaços em branco horizontais
[:cntrl:] - Caracteres de controle
[:digit:] - Dígitos
[:graph:] - Caracteres imprimíveis - Não inclúi espaços
[:lower:] - Letras minúsculas
[:print:] - Caracteres imprimíveis - Inclui Espaços
[:punct:] - Caracteres de pontuação
[:space:] - Espaços em branco horizontais e verticais
[:upper:] - Letras maiúsculas
[:xdigit:] - Dígitos hexadecimais
[:=car=:] - Caracteres equivalentes a car

***Representação octal = \nnn***

Exemplos:

tr '[:lower:]''[:upper:]' < quequeisso
tr ";" "\012" < confusao -> Converte ; em <ENTER>


\\ -> backslash
\a -> audible BeL
\b -> backspace
\f -> form feed
\n -> newline
\r -> return
\t -> horizontal tab
\v -> vertical tab

Ex: tr ";" "\n" < confusao -> Semelhante ao exemplo anterior(<ENTER> == "\n")

Ex: cat quequeisso | tr 'A-Z' 'a-z' -> Texto para minusculo

***Notação a-m, indica todos os caracteres ed m a n em ordem crescente***

-s -> Se houver repetição de algum dos caracteres pesquisados, "espreme-os" gerando somente um na saída
Ex: ls -l | tr -s ' ' -> COmprime os espaços do comando ls -l


-d -> Deleta os caracteres que atendem ao critério da pesquisa
Ex: tr -d '\12' < quequeisso -> Deleta todos os <ENTER> de quequeisso


-c -> Troca o complemento, ou seja, troca o que não foi especificado no conjunto de <dos-caracteres>
Ex: tr -cs '[:lower:]' '[:upper:]' '[\n]' < DOS.ok | paste - - - -  =  Transforma o arquivo DOS.ok em uma lista de palavras




